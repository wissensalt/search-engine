version: '3.9'

services:
  api:
    container_name: search-engine-api
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8080:8080
    networks:
      - search-engine-network
    depends_on:
      - elasticsearch
  mysql:
    image: mysql:8.0
    container_name: search-engine-mysql
    volumes:
      - vol_search_engine:/var/lib/mysql
    restart: always
    networks:
      - search-engine-network
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: search_engine_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
  logstash:
    container_name: search-engine-logstash
    build:
      context: docker/logstash
      dockerfile: Dockerfile
      args:
        ELK_VERSION: $ELK_VERSION
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx512m -Xms256m"
    networks:
      - search-engine-network
    depends_on:
      - mysql
  elasticsearch:
    container_name: search-engine-elasticsearch
    build:
      context: docker/elasticsearch
      dockerfile: Dockerfile
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: volume
        source: vol_search_engine
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node
    networks:
      - search-engine-network
    depends_on:
      - mysql
  kibana:
    container_name: search-engine-kibana
    build:
      context: docker/kibana
      dockerfile: Dockerfile
      args:
        ELK_VERSION: $ELK_VERSION
    ports:
      - "5601:5601"
    networks:
      - search-engine-network
    depends_on:
      - elasticsearch
networks:
  search-engine-network:

volumes:
  vol_search_engine: {}
